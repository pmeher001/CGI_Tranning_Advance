package com;

package lambdaexpression;
interface Operation {
	public int add(int x, int y);
}
interface FindLargest {
	public String largest(int a, int b);
}
public class LambdaOperationExample {
	public static void main(String[] args) {
	Operation op1 = (x,y)->x+y;	// by default return without return keyword. 
	System.out.println(" "+op1.add(100, 200));
	Operation op2 = (a,b)->a+b;
	System.out.println(" "+op2.add(10, 20));

	Operation op3 = (int x, int y)->x+y;
	System.out.println(" "+op3.add(1, 2));
	
	Operation op4 = (int x, int y)-> {
		int sum = x+y;
		return sum;
	};
	
	System.out.println(" "+op4.add(1000, 2000));
	//FindLargest fl = (x,y)->	x > y;
	//System.out.println(" "+fl.largest(100, 500));
	FindLargest fl = (x,y)-> x > y?"First number is largest ":"2nd Number is largest";
	System.out.println(" "+fl.largest(100, 500));
	}

}